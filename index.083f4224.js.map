{"mappings":"ACmBA,IAAM,EAAS,SAAS,gBAAgB,CAAC,SAEpC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAe,CAAA,CAAA,OAAA,QAAA,CAAA,GAAf,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAuB,CAAvB,IAAM,EAAN,EAAA,KAAA,CACG,EAAe,SAAS,aAAa,CAAC,SACtC,EAAY,AAhBpB,SAAmB,CAAM,EACvB,GAAI,EAAO,WAAW,KAAO,EAC3B,OAAO,EAGT,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,MAAM,CAAE,IACjC,GAAI,CAAM,CAAC,EAAE,CAAC,WAAW,KAAO,CAAM,CAAC,EAAE,CACvC,OAAO,EAAO,KAAK,CAAC,GAAa,MAAA,CAAV,CAAM,CAAC,EAAE,GAAI,IAAI,CAAE,IAAa,MAAA,CAAV,CAAM,CAAC,EAAE,EAG5D,EAM8B,EAAM,IAAI,CAEtC,CAAA,EAAa,WAAW,CAAG,EAC3B,EAAa,YAAY,CAAC,MAAO,EAAM,EAAE,EACzC,EAAa,YAAY,CAAC,QAAS,eACnC,EAAM,MAAM,CAAC,GAEb,EAAM,YAAY,CAAC,cA1BZ,AA0BsC,CA1BhC,CAAC,EAAE,CAAC,WAAW,GAAK,AA0BY,EA1BL,KAAK,CAAC,GA2BhD,C,C,M,E,CAVK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nfunction capitalize(string) {\n    return string[0].toUpperCase() + string.slice(1);\n}\nfunction makeWords(string) {\n    if (string.toLowerCase() === string) return string;\n    for(var i = 0; i < string.length; i++){\n        if (string[i].toLowerCase() !== string[i]) return string.split(\"\".concat(string[i])).join(\" \".concat(string[i]));\n    }\n}\nvar inputs = document.querySelectorAll(\"input\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = inputs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var input = _step.value;\n        var labelElement = document.createElement(\"label\");\n        var inputName = makeWords(input.name);\n        labelElement.textContent = inputName;\n        labelElement.setAttribute(\"for\", input.id);\n        labelElement.setAttribute(\"class\", \"field-label\");\n        input.before(labelElement);\n        input.setAttribute(\"placeholder\", capitalize(inputName));\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.083f4224.js.map\n","'use strict';\n\n// write code here\nfunction capitalize(string) {\n  return string[0].toUpperCase() + string.slice(1);\n}\n\nfunction makeWords(string) {\n  if (string.toLowerCase() === string) {\n    return string;\n  }\n\n  for (let i = 0; i < string.length; i++) {\n    if (string[i].toLowerCase() !== string[i]) {\n      return string.split(`${string[i]}`).join(` ${string[i]}`);\n    }\n  }\n}\n\nconst inputs = document.querySelectorAll('input');\n\nfor (const input of inputs) {\n  const labelElement = document.createElement('label');\n  const inputName = makeWords(input.name);\n\n  labelElement.textContent = inputName;\n  labelElement.setAttribute('for', input.id);\n  labelElement.setAttribute('class', 'field-label');\n  input.before(labelElement);\n\n  input.setAttribute('placeholder', capitalize(inputName));\n}\n"],"names":["inputs","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","input","value","labelElement","createElement","inputName","makeWords","string","toLowerCase","i","length","split","concat","join","name","textContent","setAttribute","id","before","toUpperCase","slice","err","return"],"version":3,"file":"index.083f4224.js.map"}